# Generated by Django 4.2.8 on 2024-04-19 20:34

from django.db import migrations, models
import curate.choices as choices

def update_gene_type(apps, schema_editor):
    Gene = apps.get_model("genes", "Gene")
    GeneApproval = apps.get_model("genes", "GeneApproval")
    HistoricalGene = apps.get_model("genes", "HistoricalGene")

    object_type_dict = {e.name: e.value for e in choices.GeneType}

    for gene in Gene.objects.all():
        choice_gene_type = object_type_dict[gene.gene_type]
        gene.gene_type = choice_gene_type
        gene.save()

    for gene in GeneApproval.objects.all():
        choice_gene_type = object_type_dict[gene.gene_type]
        gene.gene_type = choice_gene_type
        gene.save()

    for gene in HistoricalGene.objects.all():
        choice_gene_type = object_type_dict[gene.gene_type]
        gene.gene_type = choice_gene_type
        gene.save()

class Migration(migrations.Migration):

    dependencies = [
        ('genes', '0014_alter_historicalgene_options_and_more'),
    ]

    operations = [
        migrations.RunPython(update_gene_type, reverse_code=migrations.RunPython.noop),
        migrations.AlterField(
            model_name='gene',
            name='gene_type',
            field=models.PositiveSmallIntegerField(blank=True, choices=[(1, 'lncRNA'), (2, 'non_coding'), (3, '3prime_overlapping_non_coding'), (4, 'antisense_RNA'), (5, 'lincRNA'), (6, 'retained_intron'), (7, 'sense_intronic'), (8, 'sense_overlapping'), (9, 'macro_lncRNA'), (10, 'bidirectional_lncRNA'), (11, 'ncRNA'), (12, 'miRNA'), (13, 'piRNA'), (14, 'rRNA'), (15, 'siRNA'), (16, 'snRNA'), (17, 'snoRNA'), (18, 'tRNA'), (19, 'vaultRNA'), (20, 'pseudogene'), (21, 'protein_coding'), (22, 'tRNA_pseudogene'), (23, 'nontranslating_CDS'), (24, 'pre_miRNA'), (25, 'SRP_RNA'), (26, 'RNase_MRP_RNA')], help_text='Example - protein_coding'),
        ),
        migrations.AlterField(
            model_name='geneapproval',
            name='gene_type',
            field=models.PositiveSmallIntegerField(blank=True, choices=[(1, 'lncRNA'), (2, 'non_coding'), (3, '3prime_overlapping_non_coding'), (4, 'antisense_RNA'), (5, 'lincRNA'), (6, 'retained_intron'), (7, 'sense_intronic'), (8, 'sense_overlapping'), (9, 'macro_lncRNA'), (10, 'bidirectional_lncRNA'), (11, 'ncRNA'), (12, 'miRNA'), (13, 'piRNA'), (14, 'rRNA'), (15, 'siRNA'), (16, 'snRNA'), (17, 'snoRNA'), (18, 'tRNA'), (19, 'vaultRNA'), (20, 'pseudogene'), (21, 'protein_coding'), (22, 'tRNA_pseudogene'), (23, 'nontranslating_CDS'), (24, 'pre_miRNA'), (25, 'SRP_RNA'), (26, 'RNase_MRP_RNA')], help_text='Example - protein_coding'),
        ),
        migrations.AlterField(
            model_name='historicalgene',
            name='gene_type',
            field=models.PositiveSmallIntegerField(blank=True, choices=[(1, 'lncRNA'), (2, 'non_coding'), (3, '3prime_overlapping_non_coding'), (4, 'antisense_RNA'), (5, 'lincRNA'), (6, 'retained_intron'), (7, 'sense_intronic'), (8, 'sense_overlapping'), (9, 'macro_lncRNA'), (10, 'bidirectional_lncRNA'), (11, 'ncRNA'), (12, 'miRNA'), (13, 'piRNA'), (14, 'rRNA'), (15, 'siRNA'), (16, 'snRNA'), (17, 'snoRNA'), (18, 'tRNA'), (19, 'vaultRNA'), (20, 'pseudogene'), (21, 'protein_coding'), (22, 'tRNA_pseudogene'), (23, 'nontranslating_CDS'), (24, 'pre_miRNA'), (25, 'SRP_RNA'), (26, 'RNase_MRP_RNA')], help_text='Example - protein_coding'),
        ),
    ]
