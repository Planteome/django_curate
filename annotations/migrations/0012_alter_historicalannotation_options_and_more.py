# Generated by Django 4.2.8 on 2023-12-20 19:49

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('annotations', '0011_annotationontologyterm_aspect'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='historicalannotation',
            options={'get_latest_by': ('history_date', 'history_id'), 'ordering': ('-history_date', '-history_id'), 'verbose_name': 'historical annotation', 'verbose_name_plural': 'historical annotations'},
        ),
        migrations.AlterField(
            model_name='annotation',
            name='aspect',
            field=models.PositiveSmallIntegerField(choices=[(1, 'PO Plant Anatomy'), (2, 'PO Plant Growth'), (3, 'TO Trait'), (4, 'PECO Experimental condition'), (5, 'PSO Stress'), (6, 'GO Biological Process'), (7, 'GO Cellular Component'), (8, 'GO Molecular Function'), (99, 'Not defined')], help_text='GO Cellular component'),
        ),
        migrations.AlterField(
            model_name='annotation',
            name='db_obj_type',
            field=models.PositiveSmallIntegerField(choices=[(1, 'protein'), (2, 'germplasm'), (3, 'gene model'), (4, 'mRNA'), (5, 'gene'), (6, 'QTL'), (7, 'gene product'), (8, 'tRNA'), (9, 'miRNA'), (10, 'RNA'), (11, 'antisense_lncRNA'), (12, 'snoRNA'), (13, 'pseudogene'), (14, 'rRNA'), (15, 'snRNA'), (16, 'lnc_RNA'), (17, 'antisense_RNA'), (18, 'uORF'), (19, 'transposable_element_gene')], help_text='protein', verbose_name='DB object type'),
        ),
        migrations.AlterField(
            model_name='annotationapproval',
            name='aspect',
            field=models.PositiveSmallIntegerField(choices=[(1, 'PO Plant Anatomy'), (2, 'PO Plant Growth'), (3, 'TO Trait'), (4, 'PECO Experimental condition'), (5, 'PSO Stress'), (6, 'GO Biological Process'), (7, 'GO Cellular Component'), (8, 'GO Molecular Function'), (99, 'Not defined')], help_text='GO Cellular component'),
        ),
        migrations.AlterField(
            model_name='annotationapproval',
            name='db_obj_type',
            field=models.PositiveSmallIntegerField(choices=[(1, 'protein'), (2, 'germplasm'), (3, 'gene model'), (4, 'mRNA'), (5, 'gene'), (6, 'QTL'), (7, 'gene product'), (8, 'tRNA'), (9, 'miRNA'), (10, 'RNA'), (11, 'antisense_lncRNA'), (12, 'snoRNA'), (13, 'pseudogene'), (14, 'rRNA'), (15, 'snRNA'), (16, 'lnc_RNA'), (17, 'antisense_RNA'), (18, 'uORF'), (19, 'transposable_element_gene')], help_text='protein', verbose_name='DB object type'),
        ),
        migrations.AlterField(
            model_name='annotationontologyterm',
            name='aspect',
            field=models.PositiveSmallIntegerField(choices=[(1, 'PO Plant Anatomy'), (2, 'PO Plant Growth'), (3, 'TO Trait'), (4, 'PECO Experimental condition'), (5, 'PSO Stress'), (6, 'GO Biological Process'), (7, 'GO Cellular Component'), (8, 'GO Molecular Function'), (99, 'Not defined')], default=99),
        ),
        migrations.AlterField(
            model_name='historicalannotation',
            name='aspect',
            field=models.PositiveSmallIntegerField(choices=[(1, 'PO Plant Anatomy'), (2, 'PO Plant Growth'), (3, 'TO Trait'), (4, 'PECO Experimental condition'), (5, 'PSO Stress'), (6, 'GO Biological Process'), (7, 'GO Cellular Component'), (8, 'GO Molecular Function'), (99, 'Not defined')], help_text='GO Cellular component'),
        ),
        migrations.AlterField(
            model_name='historicalannotation',
            name='db_obj_type',
            field=models.PositiveSmallIntegerField(choices=[(1, 'protein'), (2, 'germplasm'), (3, 'gene model'), (4, 'mRNA'), (5, 'gene'), (6, 'QTL'), (7, 'gene product'), (8, 'tRNA'), (9, 'miRNA'), (10, 'RNA'), (11, 'antisense_lncRNA'), (12, 'snoRNA'), (13, 'pseudogene'), (14, 'rRNA'), (15, 'snRNA'), (16, 'lnc_RNA'), (17, 'antisense_RNA'), (18, 'uORF'), (19, 'transposable_element_gene')], help_text='protein', verbose_name='DB object type'),
        ),
        migrations.AlterField(
            model_name='historicalannotation',
            name='history_date',
            field=models.DateTimeField(db_index=True),
        ),
    ]
